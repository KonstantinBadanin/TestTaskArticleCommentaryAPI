#pragma checksum "C:\Users\kaste\source\repos\ArticleViewer\ArticleViewer\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9469cb0f7c61cd8f7e8f9d09a5d3cd6d587463a5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\kaste\source\repos\ArticleViewer\ArticleViewer\Views\_ViewImports.cshtml"
using ArticleViewer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kaste\source\repos\ArticleViewer\ArticleViewer\Views\_ViewImports.cshtml"
using ArticleViewer.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9469cb0f7c61cd8f7e8f9d09a5d3cd6d587463a5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38d39ec9bd2ed24cfdec69777f14e1f51ca8331d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\kaste\source\repos\ArticleViewer\ArticleViewer\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<h1>ArticleCommentary</h1>
<div>
    <label for=""name"" id=""Lname"">Ваше имя</label><input type=""text"" id=""name"" />
</div>
<div>
    <label for=""commentBox"" id=""Lcomment"">Ваш комментарий</label><input type=""text"" id=""commentBox"" />
</div>
<div>
    <label for=""Id"" id=""Num"">Id</label><input type=""text"" id=""IdCom"" /><label for=""artId"" id=""artNum"">Id статьи</label><input type=""text"" id=""artId"" /><label for=""ParComOrNull"" id=""Box"">Высший коммент</label><input type=""text"" id=""ParComOrNull"" /><label for=""UserId"" id=""Box5"">Id Пользователя</label><input type=""text"" id=""UserId"" />
</div>
<div>
    <button id='submit'>Отправить</button>
</div>
<script src=""http://code.jquery.com/jquery-latest.js""></script>
<script>
    var button = document.getElementById('submit');
    button.addEventListener('click', handler, false);
    var k = 0;
    var xhr = new XMLHttpRequest();
    xhr.open('GET', 'http://localhost:5000/Commentary', true);
    xhr.responseType = 'json';
    xhr.onreadystatechange = function (");
            WriteLiteral(@") {
        if (xhr.readyState != 4) return;
        if (xhr.status != 200) {
            alert(xhr.status + ': ' + xhr.statusText);
        } else {
            for (var item of xhr.response) {
                k++;
                var s = document.createElement('div');
                s.setAttribute('id', k);
                s.innerHTML = '<h3>' + item + '</h3>';
                document.body.append(s);
            }
        }
    }
    xhr.send();
    function handler() {
        var UsrName = document.getElementById('name').value;
        var Comment = document.getElementById('commentBox').value;
        var CId = document.getElementById('IdCom').value;
        var AId = document.getElementById('artId').value;
        var pid = document.getElementById('ParComOrNull').value;
        var userId = document.getElementById('UserId').value;
        var xhr1 = new XMLHttpRequest();
        xhr1.open('POST', 'http://localhost:5000/Commentary', true);
        xhr1.responseType = 'text';
   ");
            WriteLiteral(@"     xhr1.setRequestHeader(""Content-type"", ""application/json"");
        xhr1.send(JSON.stringify({ UserName: UsrName, Id: CId, ComText: Comment, UserId: userId, Article: AId, Parent: pid }));
        xhr1.onreadystatechange = function () {
            if (xhr1.readyState != 4) return;
            if (xhr1.status != 200) {
                alert(xhr1.status + ': ' + xhr1.statusText);
            } else {
                var newItem = document.createElement('div');
                k++;
                newItem.setAttribute('id', k);
                newItem.innerHTML = '<h3>' + 'Comment ' + CId + ' ' + UsrName + ' ' + Comment + '<h3>';
                document.body.append(newItem);
            }
        }
    }
</script>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\r\n\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
